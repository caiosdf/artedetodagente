[{"C:\\code\\artedetodagente\\src\\index.js":"1","C:\\code\\artedetodagente\\src\\App.js":"2","C:\\code\\artedetodagente\\src\\reportWebVitals.js":"3","C:\\code\\artedetodagente\\src\\components\\Navbar\\Navbar.js":"4","C:\\code\\artedetodagente\\src\\views\\ArteDeTodaGenteSec\\ArteDeTodaGenteSec.js":"5","C:\\code\\artedetodagente\\src\\components\\YouEmbed\\YouEmbed.js":"6","C:\\code\\artedetodagente\\src\\views\\SinosSec\\SinosSec.js":"7","C:\\code\\artedetodagente\\src\\views\\BossaCriativaSec\\BossaCriativaSec.js":"8","C:\\code\\artedetodagente\\src\\views\\UnoSec\\UnoSec.js":"9","C:\\code\\artedetodagente\\src\\views\\CalendarioSec\\CalendarioSec.js":"10","C:\\code\\artedetodagente\\src\\services\\api.js":"11","C:\\code\\artedetodagente\\src\\util\\index.js":"12"},{"size":517,"mtime":1606839838667,"results":"13","hashOfConfig":"14"},{"size":609,"mtime":1607357632791,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1606839838669,"results":"16","hashOfConfig":"14"},{"size":695,"mtime":1607357632791,"results":"17","hashOfConfig":"14"},{"size":1818,"mtime":1607357558648,"results":"18","hashOfConfig":"14"},{"size":508,"mtime":1606843541810,"results":"19","hashOfConfig":"14"},{"size":1384,"mtime":1607361472639,"results":"20","hashOfConfig":"14"},{"size":1480,"mtime":1607357547718,"results":"21","hashOfConfig":"14"},{"size":1120,"mtime":1607357524171,"results":"22","hashOfConfig":"14"},{"size":17075,"mtime":1607357632805,"results":"23","hashOfConfig":"14"},{"size":331,"mtime":1607357632801,"results":"24","hashOfConfig":"14"},{"size":339,"mtime":1607357632803,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12azp9b",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\code\\artedetodagente\\src\\index.js",[],["53","54"],"C:\\code\\artedetodagente\\src\\App.js",[],"C:\\code\\artedetodagente\\src\\reportWebVitals.js",[],"C:\\code\\artedetodagente\\src\\components\\Navbar\\Navbar.js",[],"C:\\code\\artedetodagente\\src\\views\\ArteDeTodaGenteSec\\ArteDeTodaGenteSec.js",[],"C:\\code\\artedetodagente\\src\\components\\YouEmbed\\YouEmbed.js",[],"C:\\code\\artedetodagente\\src\\views\\SinosSec\\SinosSec.js",[],"C:\\code\\artedetodagente\\src\\views\\BossaCriativaSec\\BossaCriativaSec.js",[],"C:\\code\\artedetodagente\\src\\views\\UnoSec\\UnoSec.js",[],"C:\\code\\artedetodagente\\src\\views\\CalendarioSec\\CalendarioSec.js",["55","56","57"],"import React, { useState, useEffect } from 'react';\r\nimport './CalendarioSec.css';\r\nimport {sinosApi, bossaApi, unoApi} from '../../services/api';\r\nimport * as R from 'ramda'\r\nimport imgCalendario from '../../assets/img/calendario.jpg';\r\nimport {fdate} from '../../util';\r\n\r\nconst months = [\"Janeiro\", \"Fevereiro\", \"MarÃ§o\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\r\n\r\nfunction Calendario(){\r\n\r\n    const [project, setProject] = useState('geral');\r\n    const [current_month, setCurrentMonth] = useState();\r\n    const [schedules, setSchedules] = useState([]);\r\n    const [events, setEvents] = useState([]);\r\n    const [page_buttons, setPageButtons] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const events_per_page = 6;\r\n\r\n \r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n          const response = await sinosApi.get('/schedules?_sort=date:ASC');\r\n          let schedules = response.data.map(item => new Date(item.date).getMonth());\r\n          setSchedules(schedules);\r\n          const todayMonth = new Date().getMonth();\r\n          setCurrentMonth(schedules.indexOf(todayMonth) !== -1 ? todayMonth : R.last(schedules));\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(project==='sinos'){\r\n            async function fetchData(){\r\n                const eventsCount = await sinosApi.get(`/events/count?schedule.month=${months[current_month]}`);\r\n                let pagesNumber = Math.ceil(eventsCount.data/events_per_page);\r\n                const response = await sinosApi.get(`/events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${events_per_page}&_start=${(page - 1)*events_per_page}`);\r\n                response.data.cor = '#7BC942';\r\n                setEvents(response.data ?? []);\r\n                let pageButtons = [];\r\n                for(let x = 1; x <= pagesNumber; x++){\r\n                    pageButtons.push(<button onClick={()=>setPage(x)} key={x}>{x}</button>);\r\n                }\r\n                setPageButtons(pageButtons);\r\n              }\r\n              fetchData()\r\n        }\r\n        else if(project==='uno'){\r\n            async function fetchData(){\r\n                const eventsCount = await unoApi.get(`/schedule-events/count?schedule.month=${months[current_month]}`);\r\n                let pagesNumber = Math.ceil(eventsCount.data/events_per_page);\r\n                const response = await unoApi.get(`/schedule-events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${events_per_page}&_start=${(page - 1)*events_per_page}`);\r\n                response.data.cor = \"#FF7BAC\";\r\n                setEvents(response.data ?? []);\r\n                let pageButtons = [];\r\n                for(let x = 1; x <= pagesNumber; x++){\r\n                    pageButtons.push(<button onClick={()=>setPage(x)} key={x}>{x}</button>);\r\n                }\r\n                setPageButtons(pageButtons);\r\n              }\r\n              fetchData()\r\n        }\r\n        else if(project==='bossa'){\r\n            async function fetchData(){\r\n                const eventsCount = await bossaApi.get(`/events/count?month=${current_month + 1}`);\r\n                let pagesNumber = Math.ceil(eventsCount.data/events_per_page);\r\n                const response = await bossaApi.get(`/events?_sort=date:ASC&month=${current_month + 1}&_limit=${events_per_page}&_start=${(page - 1)*events_per_page}`);\r\n                response.data.cor = '#0071BD';\r\n                setEvents(response.data);\r\n                let pageButtons = [];\r\n                for(let x = 1; x <= pagesNumber; x++){\r\n                    pageButtons.push(<button onClick={()=>setPage(x)} key={x}>{x}</button>);\r\n                }\r\n                setPageButtons(pageButtons);\r\n            }\r\n            fetchData()\r\n        }\r\n        else if(project==='geral'){\r\n            async function fetchData(){\r\n                let geralEvents = {\r\n                    sinos: {\r\n                        cor: '',\r\n                        events: []\r\n                    },\r\n                    uno: {\r\n                        cor: '',\r\n                        events: []\r\n                    },\r\n                    bossa: {\r\n                        cor: '',\r\n                        events: []\r\n                    }\r\n                };\r\n                const eventsPage = 2;\r\n                const eventsSinosCount = await sinosApi.get(`/events/count?schedule.month=${months[current_month]}`);\r\n                const eventsUnoCount = await unoApi.get(`/schedule-events/count?schedule.month=${months[current_month]}`);\r\n                const eventsBossaCount = await bossaApi.get(`/events/count?month=${current_month + 1}`);\r\n                let pagesNumber = Math.ceil((eventsSinosCount.data + eventsUnoCount.data + eventsBossaCount.data)/events_per_page);\r\n                let responseSinos = await sinosApi.get(`/events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage}&_start=${(page - 1)*eventsPage}`);\r\n                geralEvents.sinos.cor = '#7BC942';\r\n                geralEvents.sinos.events = responseSinos.data;\r\n                let responseUno = await unoApi.get(`/schedule-events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage}&_start=${(page - 1)*eventsPage}`);\r\n                geralEvents.uno.cor = '#FF7BAC';\r\n                geralEvents.uno.events = responseUno.data;\r\n                let responseBossa = await bossaApi.get(`/events?_sort=date:ASC&month=${current_month + 1}&_limit=${eventsPage}&_start=${(page - 1)*eventsPage}`);\r\n                geralEvents.bossa.cor = '#0071BD';\r\n                geralEvents.bossa.events = responseBossa.data;\r\n                if(responseSinos.data.length === 1 && responseUno.data.length === 2 && responseBossa.data.length === 2){\r\n                    const uno = await unoApi.get(`/schedule-events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 1}&_start=${(page - 1)*eventsPage}`);\r\n                    if(uno.data.length === 2){\r\n                        const bossa = await bossaApi.get(`/events?_sort=date:ASC&month=${current_month + 1}&_limit=${eventsPage + 1}&_start=${(page - 1)*eventsPage}`);\r\n                        geralEvents.bossa.events = bossa.data;\r\n                    }\r\n                    else{\r\n                        geralEvents.uno.events = uno.data;\r\n                    }\r\n                }\r\n                if(responseSinos.data.length === 2 && responseUno.data.length === 1 && responseBossa.data.length ===2){\r\n                    const sinos = await sinosApi.get(`/events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 1}&_start=${(page - 1)*eventsPage}`);\r\n                    if(sinos.data.length === 2){\r\n                        const bossa = await bossaApi.get(`/events?_sort=date:ASC&month=${current_month + 1}&_limit=${eventsPage + 1}&_start=${(page - 1)*eventsPage}`);\r\n                        geralEvents.bossa.events = bossa.data;\r\n                    }\r\n                    else{\r\n                        geralEvents.sinos.events = sinos.data;\r\n                    }\r\n                }\r\n                if(responseSinos.data.length === 2 && responseUno.data.length === 2 && responseBossa.data.length === 1){\r\n                    const sinos = await sinosApi.get(`/events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 1}&_start=${(page - 1)*eventsPage}`);\r\n                    if(sinos.data.length === 2){\r\n                        const uno = await unoApi.get(`/schedule-events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 1}&_start=${(page - 1)*eventsPage}`);\r\n                        geralEvents.uno.events = uno.data;\r\n                    }\r\n                    else{\r\n                        geralEvents.sinos.events = sinos.data;\r\n                    }\r\n                }\r\n                if(responseSinos.data.length === 0 && responseUno.data.length === 2 && responseBossa.data.length === 2){\r\n                    const uno = await unoApi.get(`/schedule-events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                    if(uno.data.length === 2){\r\n                        const bossa = await bossaApi.get(`/events?_sort=date:ASC&month=${current_month + 1}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                        geralEvents.bossa.events = bossa.data;\r\n                    }\r\n                    else{\r\n                        geralEvents.uno.events = uno.data;\r\n                    }\r\n                }\r\n                if(responseSinos.data.length === 2 && responseUno.data.length === 0 && responseBossa.data.length ===2){\r\n                    const sinos = await sinosApi.get(`/events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                    if(sinos.data.length === 2){\r\n                        const bossa = await bossaApi.get(`/events?_sort=date:ASC&month=${current_month + 1}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                        geralEvents.bossa.events = bossa.data\r\n                    }\r\n                    else{\r\n                        geralEvents.sinos.events = sinos.data;\r\n                    }\r\n                }\r\n                if(responseSinos.data.length === 2 && responseUno.data.length === 2 && responseBossa.data.length === 0){\r\n                    const sinos = await sinosApi.get(`/events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                    if(sinos.data.length === 2){\r\n                        const uno = await unoApi.get(`/schedule-events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                        geralEvents.uno.events = uno.data;\r\n                    }\r\n                    else{\r\n                        geralEvents.sinos.events = sinos.data;\r\n                    }\r\n                }\r\n                if(responseSinos.data.length === 1 && responseUno.data.length === 1 && responseBossa.data.length === 2){\r\n                    const bossa = await bossaApi.get(`/events?_sort=date:ASC&month=${current_month + 1}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                    geralEvents.bossa.events = bossa.data;\r\n                }\r\n                if(responseSinos.data.length === 1 && responseUno.data.length === 2 && responseBossa.data.length === 1){\r\n                    const uno = await unoApi.get(`/schedule-events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                    geralEvents.uno.events = uno.data;\r\n                }\r\n                if(responseSinos.data.length === 2 && responseUno.data.length === 1 && responseBossa.data.length === 1){\r\n                    const sinos = await sinosApi.get(`/events?_sort=date:ASC&schedule.month=${months[current_month]}&_limit=${eventsPage + 2}&_start=${(page - 1)*eventsPage}`);\r\n                    geralEvents.sinos.events = sinos.data;\r\n                }\r\n                console.log(geralEvents);\r\n                let arrayEvents = [];\r\n                if(geralEvents.sinos.events) {\r\n                    geralEvents.sinos.events.map(item => {\r\n                        item.cor = geralEvents.sinos.cor;\r\n                        arrayEvents.push(item);\r\n                    });\r\n                }\r\n                if(geralEvents.uno.events) geralEvents.uno.events.map(item => {\r\n                    item.cor = geralEvents.uno.cor;\r\n                    arrayEvents.push(item);\r\n                });\r\n                if(geralEvents.bossa.events) geralEvents.bossa.events.map(item => {\r\n                    item.cor = geralEvents.bossa.cor;\r\n                    arrayEvents.push(item);\r\n                });\r\n                function compara(a, b){\r\n                    if(a.date > b.date) return 1;\r\n                    if(a.date < b.date) return -1;\r\n                    return 0;\r\n                }\r\n                arrayEvents.sort(compara)\r\n                setEvents(arrayEvents ?? []);\r\n                console.log(arrayEvents)\r\n                let pageButtons = [];\r\n                for(let x = 1; x <= pagesNumber; x++){\r\n                    pageButtons.push(<button onClick={()=>setPage(x)} key={x}>{x}</button>);\r\n                }\r\n                setPageButtons(pageButtons);\r\n            }\r\n            fetchData();\r\n        }\r\n\r\n    },[current_month, project, page]);\r\n\r\n    const index = schedules.indexOf(current_month);\r\n    const prevEnabled = index > 0;\r\n    const nextEnabled = index < schedules.length - 1;\r\n    \r\n    function nextMonth() {\r\n        if(nextEnabled) setCurrentMonth(schedules[index+1]);\r\n    }\r\n\r\n    function prevMonth() {\r\n        if(prevEnabled) setCurrentMonth(schedules[index-1]);\r\n    }\r\n\r\n    let pageIndex = page;\r\n    let prevPageEnabled = pageIndex > 1;\r\n    let nextPageEnabled = pageIndex < page_buttons.length;\r\n\r\n    function nextPage(){\r\n        if(nextPageEnabled) setPage(pageIndex + 1);\r\n    }\r\n\r\n    function prevPage(){\r\n        if(prevEnabled) setPage(pageIndex - 1);\r\n    }\r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     async function fetchDataUno(){\r\n    //        const response = await unoApi.get('/schedules?_sort=date:ASC')\r\n    //       let schedules = response.data.map(item => new Date(item.date).getMonth())\r\n    //       setSchedulesUno(schedules)\r\n    //       const todayMonth = new Date().getMonth()\r\n    //       setCurrentMonthUno(schedules.indexOf(todayMonth) !== -1 ? todayMonth : R.last(schedules))\r\n    //     }\r\n    //     fetchDataUno()\r\n    //   },[project])\r\n    return(\r\n        <section id=\"calendario\" className=\"full-section-calendario\">\r\n            <div className=\"header\">\r\n                <div className=\"img-container\">\r\n                    <img className=\"img-calendario\" src={imgCalendario} alt=\"\"/>\r\n                </div>\r\n                <div className=\"toolbar\">\r\n                    <div className=\"months-nav\">\r\n                        <button onClick={()=>prevMonth()} style={{opacity: prevEnabled ? 1 : 0.5}}>â</button>\r\n                        <div className=\"span-container\">\r\n                            <span>{months[current_month] || `...`}</span>\r\n                        </div>\r\n                        <button onClick={()=>nextMonth()} style={{opacity: nextEnabled ? 1 : 0.5}}>â¶</button>\r\n                    </div>\r\n                    <div className=\"projects-nav\">\r\n                        <button className=\"geral-button\" onClick={()=>{\r\n                            if(project !== 'geral') setPage(1);\r\n                            setProject('geral');\r\n                            }} >GERAL</button>\r\n                        <button className=\"sinos-button\" onClick={()=>{\r\n                            if(project !== 'sinos') setPage(1);\r\n                            setProject('sinos')\r\n                            }} >SINOS</button>\r\n                        <button className=\"bossa-button\" onClick={()=>{\r\n                            if(project !== 'bossa') setPage(1);\r\n                            setProject('bossa')\r\n                            }} >BOSSA CRIATIVA</button>\r\n                        <button className=\"uno-button\" onClick={()=>{\r\n                            if(project !== 'uno') setPage(1);\r\n                            setProject('uno')\r\n                            }} >UM NOVO OLHAR</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"agenda-feed\">\r\n                {events.map((evento,i) => {\r\n                const date = fdate(evento.date)\r\n                return (\r\n                    <article key={`agenda-${current_month}-${i}`}>\r\n                    <div className=\"agenda-item\">\r\n                        <div className=\"agenda-date\">\r\n                            <h3 style={{\r\n                                color:`${events.cor ? events.cor : evento.cor}`\r\n                            }}>{date.day}</h3>\r\n                        </div>\r\n                        <div className=\"agenda-content\">\r\n                            <h3>{evento.time} | {evento.title}</h3>\r\n                            <p>{evento.text}</p>\r\n                        </div>\r\n                    </div>\r\n                    </article>\r\n                )\r\n                })}\r\n            </div>\r\n            <div className=\"agenda-footer\">\r\n                <div className=\"agenda-page-buttons\">\r\n                    <button onClick={()=>prevPage()} style={{opacity: prevPageEnabled ? 1 : 0.5}}>â</button>\r\n                    {page_buttons}\r\n                    <button onClick={()=>nextPage()} style={{opacity: nextPageEnabled ? 1 : 0.5}}>â¶</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Calendario;","C:\\code\\artedetodagente\\src\\services\\api.js",[],"C:\\code\\artedetodagente\\src\\util\\index.js",[],["58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":186,"column":55,"nodeType":"66","messageId":"67","endLine":186,"endColumn":57},{"ruleId":"64","severity":1,"message":"65","line":191,"column":76,"nodeType":"66","messageId":"67","endLine":191,"endColumn":78},{"ruleId":"64","severity":1,"message":"65","line":195,"column":80,"nodeType":"66","messageId":"67","endLine":195,"endColumn":82},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["70"],["71"],"no-global-assign","no-unsafe-negation"]